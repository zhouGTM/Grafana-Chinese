{"version":3,"file":"SnapshotListPage.1ebdc265fc3bd7452fcd.js","sources":["webpack:////./public/app/features/manage-dashboards/SnapshotListPage.tsx","webpack:////./public/app/features/manage-dashboards/components/SnapshotListTable.tsx","webpack:////./public/app/features/manage-dashboards/state/selectors.ts"],"sourcesContent":["import React, { FC } from 'react';\nimport { MapStateToProps, connect } from 'react-redux';\nimport { NavModel } from '@grafana/data';\nimport Page from 'app/core/components/Page/Page';\nimport { getUrl } from 'app/core/selectors/location';\nimport { StoreState } from 'app/types';\nimport { SnapshotListTable } from './components/SnapshotListTable';\nimport { getDashboardNavModel } from './state/selectors';\n\ninterface Props {\n  navModel: NavModel;\n  url: string;\n}\n\nexport const SnapshotListPage: FC<Props> = ({ navModel, url }) => {\n  return (\n    <Page navModel={navModel}>\n      <Page.Contents>\n        <SnapshotListTable url={url} />\n      </Page.Contents>\n    </Page>\n  );\n};\n\nconst mapStateToProps: MapStateToProps<Props, {}, StoreState> = (state: StoreState) => ({\n  navModel: getDashboardNavModel(state),\n  url: getUrl(state.location),\n});\n\nexport default connect(mapStateToProps)(SnapshotListPage);\n","import React, { FC, useState, useCallback, useEffect } from 'react';\nimport { ConfirmModal, Button, LinkButton } from '@grafana/ui';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { noop } from 'rxjs';\nimport { Snapshot } from '../types';\n\ninterface Props {\n  url: string;\n}\n\nexport const SnapshotListTable: FC<Props> = ({ url }) => {\n  const [snapshots, setSnapshots] = useState<Snapshot[]>([]);\n  const [removeSnapshot, setRemoveSnapshot] = useState<Snapshot | undefined>();\n\n  const getSnapshots = useCallback(async () => {\n    await getBackendSrv()\n      .get('/api/dashboard/snapshots')\n      .then((result: Snapshot[]) => {\n        const absUrl = window.location.href;\n        const baseUrl = absUrl.replace(url, '');\n        const snapshots = result.map(snapshot => ({\n          ...snapshot,\n          url: snapshot.externalUrl || `${baseUrl}/dashboard/snapshot/${snapshot.key}`,\n        }));\n        setSnapshots(snapshots);\n      });\n  }, []);\n\n  const doRemoveSnapshot = useCallback(\n    async (snapshot: Snapshot) => {\n      setSnapshots(snapshots.filter(ss => ss.key !== snapshot.key));\n      await getBackendSrv()\n        .delete(`/api/snapshots/${snapshot.key}`)\n        .then(noop, () => {\n          setSnapshots(snapshots.concat(snapshot));\n        });\n    },\n    [snapshots]\n  );\n\n  useEffect(() => {\n    getSnapshots();\n  }, []);\n\n  return (\n    <div className=\"page-container page-body\">\n      <table className=\"filter-table\">\n        <thead>\n          <tr>\n            <th>\n              <strong>名字</strong>\n            </th>\n            <th>\n              <strong>快照地址</strong>\n            </th>\n            <th style={{ width: '70px' }}></th>\n            <th style={{ width: '30px' }}></th>\n            <th style={{ width: '25px' }}></th>\n          </tr>\n        </thead>\n        <tbody>\n          {snapshots.map((snapshot, key) => {\n            return (\n              <tr key={key}>\n                <td>\n                  <a href={snapshot.url}>{snapshot.name}</a>\n                </td>\n                <td>\n                  <a href={snapshot.url}>{snapshot.url}</a>\n                </td>\n                <td>{snapshot.external && <span className=\"query-keyword\">外部</span>}</td>\n                <td className=\"text-center\">\n                  <LinkButton href={snapshot.url} variant=\"secondary\" size=\"sm\" icon=\"eye\">\n                    查看\n                  </LinkButton>\n                </td>\n                <td className=\"text-right\">\n                  <Button variant=\"destructive\" size=\"sm\" icon=\"times\" onClick={() => setRemoveSnapshot(snapshot)} />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n\n      <ConfirmModal\n        isOpen={!!removeSnapshot}\n        icon=\"trash-alt\"\n        title=\"删除\"\n        body={`你确定你要删除 '${removeSnapshot?.name}'?`}\n        confirmText=\"删除\"\n        onDismiss={() => setRemoveSnapshot(undefined)}\n        onConfirm={() => {\n          doRemoveSnapshot(removeSnapshot!);\n          setRemoveSnapshot(undefined);\n        }}\n      />\n    </div>\n  );\n};\n","import { NavModel } from '@grafana/data';\nimport { StoreState } from 'app/types';\nimport { getUrl } from 'app/core/selectors/location';\nimport { getNavModel } from 'app/core/selectors/navModel';\n\nexport const getDashboardNavModel = (state: StoreState): NavModel => {\n  const url = getUrl(state.location);\n  const navModel = getNavModel(state.navIndex, 'dashboards');\n  const nav = { ...navModel };\n  const node = nav.main.children?.find(item => item.url === url);\n\n  if (node) {\n    nav.node = node;\n  }\n\n  // This needs to be copied to avoid mutating the store in a selector\n  nav.main.children = [...navModel.main.children];\n\n  for (const item of nav.main.children) {\n    item.active = false;\n\n    if (item.url === nav.node.url) {\n      item.active = true;\n    }\n  }\n\n  return nav;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAOA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AAOA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAEA;AAFA;AAAA;AAIA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAKA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AASA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAVA;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjGA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AACA;AADA;AAaA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAoBA;AACA;;;;A","sourceRoot":""}