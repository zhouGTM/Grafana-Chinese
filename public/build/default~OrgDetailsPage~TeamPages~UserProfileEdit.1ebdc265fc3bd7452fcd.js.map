{"version":3,"file":"default~OrgDetailsPage~TeamPages~UserProfileEdit.1ebdc265fc3bd7452fcd.js","sources":["webpack:////./public/app/core/components/SharedPreferences/SharedPreferences.tsx"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport { css } from 'emotion';\n\nimport {\n  Select,\n  Field,\n  Form,\n  Tooltip,\n  Icon,\n  stylesFactory,\n  Label,\n  Button,\n  RadioButtonGroup,\n  FieldSet,\n  TimeZonePicker,\n} from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { DashboardSearchHit, DashboardSearchItemType } from 'app/features/search/types';\nimport { backendSrv } from 'app/core/services/backend_srv';\n\nexport interface Props {\n  resourceUri: string;\n}\n\nexport interface State {\n  homeDashboardId: number;\n  theme: string;\n  timezone: string;\n  dashboards: DashboardSearchHit[];\n}\n\nconst themes: SelectableValue[] = [\n  { value: '', label: '默认' },\n  { value: 'dark', label: '黑暗' },\n  { value: 'light', label: '明亮' },\n];\n\nexport class SharedPreferences extends PureComponent<Props, State> {\n  backendSrv = backendSrv;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      homeDashboardId: 0,\n      theme: '',\n      timezone: '',\n      dashboards: [],\n    };\n  }\n\n  async componentDidMount() {\n    const prefs = await backendSrv.get(`/api/${this.props.resourceUri}/preferences`);\n    const dashboards = await backendSrv.search({ starred: true });\n    const defaultDashboardHit: DashboardSearchHit = {\n      id: 0,\n      title: '默认',\n      tags: [],\n      type: '' as DashboardSearchItemType,\n      uid: '',\n      uri: '',\n      url: '',\n      folderId: 0,\n      folderTitle: '',\n      folderUid: '',\n      folderUrl: '',\n      isStarred: false,\n      slug: '',\n      items: [],\n    };\n\n    if (prefs.homeDashboardId > 0 && !dashboards.find(d => d.id === prefs.homeDashboardId)) {\n      const missing = await backendSrv.search({ dashboardIds: [prefs.homeDashboardId] });\n      if (missing && missing.length > 0) {\n        dashboards.push(missing[0]);\n      }\n    }\n\n    this.setState({\n      homeDashboardId: prefs.homeDashboardId,\n      theme: prefs.theme,\n      timezone: prefs.timezone,\n      dashboards: [defaultDashboardHit, ...dashboards],\n    });\n  }\n\n  onSubmitForm = async () => {\n    const { homeDashboardId, theme, timezone } = this.state;\n\n    await backendSrv.put(`/api/${this.props.resourceUri}/preferences`, {\n      homeDashboardId,\n      theme,\n      timezone,\n    });\n    window.location.reload();\n  };\n\n  onThemeChanged = (value: string) => {\n    this.setState({ theme: value });\n  };\n\n  onTimeZoneChanged = (timezone: string) => {\n    if (!timezone) {\n      return;\n    }\n    this.setState({ timezone: timezone });\n  };\n\n  onHomeDashboardChanged = (dashboardId: number) => {\n    this.setState({ homeDashboardId: dashboardId });\n  };\n\n  getFullDashName = (dashboard: DashboardSearchHit) => {\n    if (typeof dashboard.folderTitle === 'undefined' || dashboard.folderTitle === '') {\n      return dashboard.title;\n    }\n    return dashboard.folderTitle + ' / ' + dashboard.title;\n  };\n\n  render() {\n    const { theme, timezone, homeDashboardId, dashboards } = this.state;\n    const styles = getStyles();\n\n    return (\n      <Form onSubmit={this.onSubmitForm}>\n        {() => {\n          return (\n            <FieldSet label=\"偏好设定\">\n              <Field label=\"主题\">\n                <RadioButtonGroup\n                  options={themes}\n                  value={themes.find(item => item.value === theme)?.value}\n                  onChange={this.onThemeChanged}\n                />\n              </Field>\n\n              <Field\n                label={\n                  <Label>\n                    <span className={styles.labelText}>主仪表板</span>\n                    <Tooltip content=\"找不到想要的仪表板？先对其加注星标，然后它应出现在此选择框中。\">\n                      <Icon name=\"info-circle\" />\n                    </Tooltip>\n                  </Label>\n                }\n              >\n                <Select\n                  value={dashboards.find(dashboard => dashboard.id === homeDashboardId)}\n                  getOptionValue={i => i.id}\n                  getOptionLabel={this.getFullDashName}\n                  onChange={(dashboard: DashboardSearchHit) => this.onHomeDashboardChanged(dashboard.id)}\n                  options={dashboards}\n                  placeholder=\"选择默认仪表板\"\n                />\n              </Field>\n\n              <Field label=\"时区\" aria-label={selectors.components.TimeZonePicker.container}>\n                <TimeZonePicker includeInternal={true} value={timezone} onChange={this.onTimeZoneChanged} />\n              </Field>\n              <div className=\"gf-form-button-row\">\n                <Button variant=\"primary\">保存</Button>\n              </div>\n            </FieldSet>\n          );\n        }}\n      </Form>\n    );\n  }\n}\n\nexport default SharedPreferences;\n\nconst getStyles = stylesFactory(() => {\n  return {\n    labelText: css`\n      margin-right: 6px;\n    `,\n  };\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAcA;AAGA;AAaA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8CA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AACA;AAJA;AAQA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA/CA;AA0DA;AAAA;AAAA;AACA;AACA;AA5DA;AA8DA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAnEA;AAqEA;AAAA;AAAA;AACA;AACA;AAvEA;AAyEA;AACA;AACA;AACA;AAAA;AACA;AACA;AA3EA;AACA;AACA;AACA;AACA;AAJA;AAHA;AASA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAeA;AAfA;AAAA;AAgBA;AAAA;AACA;AAjBA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AACA;AAlBA;AAkCA;AAAA;AAlCA;AAAA;AAAA;AACA;AADA;AAAA;AAmCA;AAAA;AACA;AApCA;AAmCA;AACA;AAAA;AACA;AACA;AACA;AAvCA;AAyCA;AACA;AACA;AACA;AACA;AAJA;AACA;AA1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAkFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAQA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AALA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAUA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAIA;AAGA;AAlIA;AACA;AADA;AAAA;AAqIA;AAEA;AACA;AACA;AADA;AAKA;;;;A","sourceRoot":""}