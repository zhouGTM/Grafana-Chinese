{"version":3,"file":"AdminListOrgsPage.1ebdc265fc3bd7452fcd.js","sources":["webpack:////./public/app/features/admin/AdminListOrgsPage.tsx","webpack:////./public/app/features/admin/AdminOrgsTable.tsx"],"sourcesContent":["import React, { FC, useEffect } from 'react';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport Page from 'app/core/components/Page/Page';\nimport { useSelector } from 'react-redux';\nimport { StoreState } from 'app/types/store';\nimport { LinkButton } from '@grafana/ui';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { AdminOrgsTable } from './AdminOrgsTable';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\n\nconst deleteOrg = async (orgId: number) => {\n  return await getBackendSrv().delete('/api/orgs/' + orgId);\n};\n\nconst getOrgs = async () => {\n  return await getBackendSrv().get('/api/orgs');\n};\n\nexport const AdminListOrgsPages: FC = () => {\n  const navIndex = useSelector((state: StoreState) => state.navIndex);\n  const navModel = getNavModel(navIndex, 'global-orgs');\n  const [state, fetchOrgs] = useAsyncFn(async () => await getOrgs(), []);\n\n  useEffect(() => {\n    fetchOrgs();\n  }, []);\n\n  return (\n    <Page navModel={navModel}>\n      <Page.Contents>\n        <>\n          <div className=\"page-action-bar\">\n            <div className=\"page-action-bar__spacer\" />\n            <LinkButton icon=\"plus\" href=\"org/new\">\n              新组织\n            </LinkButton>\n          </div>\n          {state.loading && '获取组织'}\n          {state.error}\n          {state.value && (\n            <AdminOrgsTable\n              orgs={state.value}\n              onDelete={orgId => {\n                deleteOrg(orgId).then(() => fetchOrgs());\n              }}\n            />\n          )}\n        </>\n      </Page.Contents>\n    </Page>\n  );\n};\n\nexport default AdminListOrgsPages;\n","import React, { FC, useState } from 'react';\nimport { Organization } from 'app/types';\nimport { Button, ConfirmModal } from '@grafana/ui';\n\ninterface Props {\n  orgs: Organization[];\n  onDelete: (orgId: number) => void;\n}\n\nexport const AdminOrgsTable: FC<Props> = ({ orgs, onDelete }) => {\n  const [deleteOrg, setDeleteOrg] = useState<Organization>();\n  return (\n    <table className=\"filter-table form-inline filter-table--hover\">\n      <thead>\n        <tr>\n          <th>Id</th>\n          <th>名字</th>\n          <th style={{ width: '1%' }}></th>\n        </tr>\n      </thead>\n      <tbody>\n        {orgs.map(org => (\n          <tr key={`${org.id}-${org.name}`}>\n            <td className=\"link-td\">\n              <a href={`admin/orgs/edit/${org.id}`}>{org.id}</a>\n            </td>\n            <td className=\"link-td\">\n              <a href={`admin/orgs/edit/${org.id}`}>{org.name}</a>\n            </td>\n            <td className=\"text-right\">\n              <Button variant=\"destructive\" size=\"sm\" icon=\"times\" onClick={() => setDeleteOrg(org)} />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n      {deleteOrg && (\n        <ConfirmModal\n          isOpen\n          icon=\"trash-alt\"\n          title=\"删除\"\n          body={\n            <div>\n              你确定你要删除 '{deleteOrg.name}'?\n              <br /> <small>该组织的所有仪表板将被删除！</small>\n            </div>\n          }\n          confirmText=\"删除\"\n          onDismiss={() => setDeleteOrg(undefined)}\n          onConfirm={() => {\n            onDelete(deleteOrg.id);\n            setDeleteOrg(undefined);\n          }}\n        />\n      )}\n    </table>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AAHA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAWA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AAEA;AAOA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAKA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAgBA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAfA;AAoBA;;;;A","sourceRoot":""}