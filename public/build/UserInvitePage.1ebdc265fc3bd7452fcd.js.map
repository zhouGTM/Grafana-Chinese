{"version":3,"file":"UserInvitePage.1ebdc265fc3bd7452fcd.js","sources":["webpack:////./public/app/features/org/UserInviteForm.tsx","webpack:////./public/app/features/org/UserInvitePage.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport {\n  HorizontalGroup,\n  Button,\n  LinkButton,\n  Input,\n  Switch,\n  RadioButtonGroup,\n  Form,\n  Field,\n  InputControl,\n} from '@grafana/ui';\nimport { getConfig } from 'app/core/config';\nimport { OrgRole } from 'app/types';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { updateLocation } from 'app/core/actions';\nimport { connect } from 'react-redux';\nimport { hot } from 'react-hot-loader';\nimport { appEvents } from 'app/core/core';\nimport { AppEvents, locationUtil } from '@grafana/data';\n\nconst roles = [\n  { label: 'Viewer', value: OrgRole.Viewer },\n  { label: 'Editor', value: OrgRole.Editor },\n  { label: 'Admin', value: OrgRole.Admin },\n];\n\ninterface FormModel {\n  role: OrgRole;\n  name: string;\n  loginOrEmail?: string;\n  sendEmail: boolean;\n  email: string;\n}\n\ninterface Props {\n  updateLocation: typeof updateLocation;\n}\n\nexport const UserInviteForm: FC<Props> = ({ updateLocation }) => {\n  const onSubmit = async (formData: FormModel) => {\n    try {\n      await getBackendSrv().post('/api/org/invites', formData);\n    } catch (err) {\n      appEvents.emit(AppEvents.alertError, ['发送邀请失败', err.message]);\n    }\n    updateLocation({ path: 'org/users/' });\n  };\n  const defaultValues: FormModel = {\n    name: '',\n    email: '',\n    role: OrgRole.Editor,\n    sendEmail: true,\n  };\n\n  return (\n    <Form defaultValues={defaultValues} onSubmit={onSubmit}>\n      {({ register, control, errors }) => {\n        return (\n          <>\n            <Field\n              invalid={!!errors.loginOrEmail}\n              error={!!errors.loginOrEmail ? '电子邮件或用户名为必填项' : undefined}\n              label=\"电子邮件或用户名\"\n            >\n              <Input name=\"loginOrEmail\" placeholder=\"email@example.com\" ref={register({ required: true })} />\n            </Field>\n            <Field invalid={!!errors.name} label=\"名字\">\n              <Input name=\"name\" placeholder=\"(可选)\" ref={register} />\n            </Field>\n            <Field invalid={!!errors.role} label=\"角色\">\n              <InputControl as={RadioButtonGroup} control={control} options={roles} name=\"role\" />\n            </Field>\n            <Field invalid={!!errors.sendEmail} label=\"发送邀请邮件\">\n              <Switch name=\"sendEmail\" ref={register} />\n            </Field>\n            <HorizontalGroup>\n              <Button type=\"submit\">提交</Button>\n              <LinkButton href={locationUtil.assureBaseUrl(getConfig().appSubUrl + '/org/users')} variant=\"secondary\">\n                返回\n              </LinkButton>\n            </HorizontalGroup>\n          </>\n        );\n      }}\n    </Form>\n  );\n};\n\nconst mapDispatchToProps = {\n  updateLocation,\n};\n\nexport default hot(module)(connect(null, mapDispatchToProps)(UserInviteForm));\n","import React, { FC } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { connect } from 'react-redux';\nimport UserInviteForm from './UserInviteForm';\nimport { contextSrv, NavModel } from 'app/core/core';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { StoreState } from 'app/types/store';\nimport Page from 'app/core/components/Page/Page';\n\ninterface Props {\n  navModel: NavModel;\n}\n\nexport const UserInvitePage: FC<Props> = ({ navModel }) => {\n  return (\n    <Page navModel={navModel}>\n      <Page.Contents>\n        <h3 className=\"page-sub-heading\">邀请用户</h3>\n        <div className=\"p-b-2\">\n          发送邀请或将现有Grafana用户添加到组织中\n          <span className=\"highlight-word\"> {contextSrv.user.orgName}</span>\n        </div>\n        <UserInviteForm />\n      </Page.Contents>\n    </Page>\n  );\n};\n\nconst mapStateToProps = (state: StoreState) => ({\n  navModel: getNavModel(state.navIndex, 'users'),\n});\n\nexport default hot(module)(connect(mapStateToProps)(UserInvitePage));\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAeA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AACA;AALA;AAMA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAMA;AAGA;AAEA;AACA;AADA;AAIA;;;;;;;;;;;;;AC7FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAMA;AACA;AACA;AAAA;AACA;AADA;AAAA;AACA;AAGA;;;;;A","sourceRoot":""}