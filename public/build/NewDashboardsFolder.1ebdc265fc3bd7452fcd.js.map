{"version":3,"file":"NewDashboardsFolder.1ebdc265fc3bd7452fcd.js","sources":["webpack:////./public/app/features/folders/components/NewDashboardsFolder.tsx"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { NavModel } from '@grafana/data';\nimport { Button, Input, Form, Field } from '@grafana/ui';\nimport Page from 'app/core/components/Page/Page';\nimport { createNewFolder } from '../state/actions';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { StoreState } from 'app/types';\nimport validationSrv from '../../manage-dashboards/services/ValidationSrv';\n\ninterface OwnProps {}\n\ninterface ConnectedProps {\n  navModel: NavModel;\n}\n\ninterface DispatchProps {\n  createNewFolder: typeof createNewFolder;\n}\n\ninterface FormModel {\n  folderName: string;\n}\n\nconst initialFormModel: FormModel = { folderName: '' };\n\ntype Props = OwnProps & ConnectedProps & DispatchProps;\n\nexport class NewDashboardsFolder extends PureComponent<Props> {\n  onSubmit = (formData: FormModel) => {\n    this.props.createNewFolder(formData.folderName);\n  };\n\n  validateFolderName = (folderName: string) => {\n    return validationSrv\n      .validateNewFolderName(folderName)\n      .then(() => {\n        return true;\n      })\n      .catch(e => {\n        return e.message;\n      });\n  };\n\n  render() {\n    return (\n      <Page navModel={this.props.navModel}>\n        <Page.Contents>\n          <h3>新建仪表板文件夹</h3>\n          <Form defaultValues={initialFormModel} onSubmit={this.onSubmit}>\n            {({ register, errors }) => (\n              <>\n                <Field\n                  label=\"文件夹名字\"\n                  invalid={!!errors.folderName}\n                  error={errors.folderName && errors.folderName.message}\n                >\n                  <Input\n                    name=\"folderName\"\n                    ref={register({\n                      required: '文件夹名字必填项',\n                      validate: async v => await this.validateFolderName(v),\n                    })}\n                  />\n                </Field>\n                <Button type=\"submit\">创建</Button>\n              </>\n            )}\n          </Form>\n        </Page.Contents>\n      </Page>\n    );\n  }\n}\n\nconst mapStateToProps: MapStateToProps<ConnectedProps, OwnProps, StoreState> = state => ({\n  navModel: getNavModel(state.navIndex, 'manage-dashboards'),\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, OwnProps> = {\n  createNewFolder,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewDashboardsFolder);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAgBA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAEA;AACA;AACA;AAJA;AAMA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAfA;AAAA;AACA;AADA;AAAA;AAAA;AAgBA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAFA;AAFA;AAQA;AAAA;AAfA;AAsBA;AA5CA;AACA;AADA;AAAA;AACA;AA8CA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AACA;AADA;AAIA;;;;A","sourceRoot":""}